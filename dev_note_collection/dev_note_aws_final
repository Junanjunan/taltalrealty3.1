
버전선택: python version 3.8.10 64-bit

pip3 install awsebcli

$ pipenv shell
    -> Pipfile 생성됨
        -> 이용하던 Pipfile 있어서 삭제하고 그 파일 붙여넣기함
            - pipenv install : 불러온 Pipfile에 기록되어 있는 library등 일괄 설치
            - .env 등을 포함해서 django app 그대로 가져옴
                - .env 적용시키려면 vsc 껐다 키기
            - python manage.py makemigrations / migrate / createsuperuser / runserver로 작동 되는지 확인

.ebextensions/01-packages.config
    packages:
      yum:    # Linux의 설치 파일? Python의 pip 같은 경우
        postgresql-devel: []

.ebextensions/02-django.config
    container_commands:
      01_migrate:
        command: "source /var/app/venv/staging-LQM1lest/bin/activate ; python manage.py migrate"
        leader_only: true
      02_collectstatic:
        command: "source /var/app/venv/staging-LQM1lest/bin/activate ; python manage.py collectstatic --noinput"
      03_createsu:
        command: "source /var/app/venv/staging-LQM1lest/bin/activate ; python manage.py createsu"
    option_settings:
      aws:elasticbeanstalk:container:python:
        WSGIPath: config.wsgi:application
      aws:elasticbeanstalk:application:environment:
        DJANGO_SETTINGS_MODULE: config.settings


기본 세팅들이 되어있으니, eb create를 하기 전에 RDS, S3를 먼저 만들기

AWS RDS 생성
    - PostgreSQL , 버전: PostgreSQL 13.4-R1 (default), 프리티어
    - DB 인스턴스 식별자: taltalrealty3
    - 마스터 사용자 이름: postgres (default)
    - 마스터 암호: @ 사용 안됨
    - 추가 구성 / 데이터베이스 옵션 / 초기 데이터베이스 이름 설정 
      ->  "데이터베이스 이름을 지정하지 않으면 Amazon RDS에서 데이터베이스를 생성하지 않습니다." 라고 설명
          실제로 이걸 안해줘서 오류 발생
    - DB 인스턴스 클래스: 버스터블 클래스(t클래스 포함) - db.t3.micro 선택 (default)
    - 나머지 설정 default로 놔두고 생성

    config/settings.py
      DATABASE = {
                  "defult": {
                      "ENGINE": "django.db.backends.postgresql",
                      "HOST": os.environ.get("RDS_HOST"),                    # RDS/데이터베이스/Connectivity & security에 (연결&보안)있는 Endpoint 입력
                      "NAME": os.environ.get("RDS_NAME"),                    # 방금 만들었던 db 이름(DB 식별자) : "airbnb-clone" -> "postgres"로 해줘야 Error – FATAL: database name does not exist  해결됨!!!!!!!  -> 아닌 듯, 내가 만든 이름 넣으면 됨. ex) taltalrealty31
                      "USER": os.environ.get("RDS_USER"),                    # username에 있었던 것: "postgres"
                      "PASSWORD": os.environ.get("RDS_PASSWORD"),            # RDS에 등록한 비번
                      "PORT": "5432",                 # Connectivity & security에 있는 Port
                      
                  }
              }

    요금 설명
      Amazon RDS 프리 티어는 12개월 동안 사용할 수 있습니다. 매월 프리 티어를 통해 아래 나열된 Amazon RDS 리소스를 무료로 사용할 수 있습니다.
      단일 AZ db.t2.micro 인스턴스에서 Amazon RDS의 750시간.
      20GB의 범용 스토리지(SSD).
      20GB의 자동 백업 스토리지 및 사용자가 시작한 모든 DB 스냅샷.
      AWS 무료 티어에 대해 자세히 알아보세요.
      무료 사용이 만료되었거나 애플리케이션에서 프리 티어 사용량을 초과한 경우 Amazon RDS 요금 페이지에서 설명한 대로, 표준 종량 서비스 요금이 적용됩니다.
      Amazon RDS 요금 설명: https://aws.amazon.com/ko/rds/pricing/


S3 만들기

  collectstatic - 필수인지는 확실하지 않은데, 아래를 먼저 해도 안될 경우 다음 collectstatic 과정을 거쳐보자
    $ pipenv install django-staticfiles
    config/settings.py
      STATIC_ROOT = os.path.join(BASE_DIR, "var", "static")
    $ python manage.py collectstatic

    그 외에도
    config/settings.py
      STATIC_URL = '/static/'   # /static 등으로 하면, AWS에 올릴시 STATIC_URl은 반드시 slash로 끝나야 한다고 오류 뜸. 아래 MEDIA_URl도 마찬가지
      STATICFILES_DIRS =  [os.path.join(BASE_DIR, "static"),] # AWS에 올리면, s3에 보관될 자리???
      STATIC_ROOT = os.path.join(BASE_DIR, "var", "static")   # pipenv install django-staticfiles를 하고, python manage.py collectstatic를 하면, BASE_DIR/var/static에 static 파일들 모아짐

      MEDIA_ROOT = os.path.join(BASE_DIR, "uploads")
      MEDIA_URL = "/media/"

    if not DEBUG:
        DEFAULT_FILE_STORAGE = 'config.custom_storages.UploadStorage' # 일반적으로 'storages.backends.s3boto3.S3Boto3Storage' 를 해준다. 노마드 강의에서는 config/custom_storages.py에 file_overwrite(덮어쓰기)를 안해주도록 하기 위해 따로 만들고 불러오기로 했음
        STATICFILES_STORAGE = 'config.custom_storages.StaticStorage'
        AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')
        AWS_STORAGE_BUCKET_NAME = 'taltalrealty31'
        AWS_DEFAULT_ACL = 'public-read'   # 누구나 읽을 수 있게 한다는 ACL을 설정한다는 뜻. 이걸 설정 안해주면 css가 s3에 올라가있는데도 접근을 못해서 css 등이 적용이 안되었음(진짜 그런지는 다시 확인 필요)
        AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86500'}
        AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.ap-northeast-2.amazonaws.com' # S3에 파일(예를 들어 메모장) 만들어서 링크 타고 이동, 최종적으로 url이 어떻게 표현되는지 봐야함. 앞뒤 순서, 구성등이 달라질 수 있음
        STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/static/'

  객체 소유권
    ACL 활성화됨 / 버킷 소유자 선호 선택
  이 버킷의 퍼블릭 액세스 차단 설정
    모든 퍼블릭 액세스 차단 비활성화(체크박스 풀어주기)
  나머지 deafult로 두고 생성

  S3 ACL 설정(S3 버킷 삭제도 가능)
    - 권한 부여를 하고 진행해야 가능
    https://docs.aws.amazon.com/ko_kr/config/latest/developerguide/s3-bucket-policy.html
      1. S3 버킷이 포함된 계정을 사용하여 AWS Management Console에 로그인합니다.
      2. https://console.aws.amazon.com/s3/에서 Amazon S3 콘솔을 엽니다.
      3. AWS Config에서 구성 항목을 전송할 때 사용할 버킷을 선택한 다음 속성을 선택합니다.
      4. 권한을 선택합니다.
      5. [Edit Bucket Policy]를 선택합니다.
      6.다음 정책을 버킷 정책 편집기 창으로 복사합니다.
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "AWSConfigBucketPermissionsCheck",
              "Effect": "Allow",
              "Principal": {
                "Service": "config.amazonaws.com"
              },
              "Action": "s3:GetBucketAcl",
              "Resource": "arn:aws:s3:::targetBucketName",
              "Condition": { 
                "StringEquals": {
                  "AWS:SourceAccount": "sourceAccountID"
                }
              }
            },
            {
              "Sid": "AWSConfigBucketExistenceCheck",
              "Effect": "Allow",
              "Principal": {
                "Service": "config.amazonaws.com"
              },
              "Action": "s3:ListBucket",
              "Resource": "arn:aws:s3:::targetBucketName",
              "Condition": { 
                "StringEquals": {
                  "AWS:SourceAccount": "sourceAccountID"
                }
              }
            },
            {
              "Sid": "AWSConfigBucketDelivery",
              "Effect": "Allow",
              "Principal": {
                "Service": "config.amazonaws.com"
              },
              "Action": "s3:PutObject",
              "Resource": "arn:aws:s3:::targetBucketName/[optional] prefix/AWSLogs/sourceAccountID/Config/*",
              "Condition": { 
                "StringEquals": { 
                  "s3:x-amz-acl": "bucket-owner-full-control",
                  "AWS:SourceAccount": "sourceAccountID"
                }
              }
            }
          ]
        }

        sourceAccountID는 계정 ID: 1542-4215-1844 숫자 형태로 되어있는것, 영문으로 되어있는 걸로 하면 퍼블릭 액세스 차단 상태에서 접근이 안됨

      
  위와 같이 권한에서 정책 편집을 해서 권한을 부여하고 나면,
  퍼블릭 액세스 차단을 활성화 한 상태에서도 업로드가 가능
  근데, 추가 업로드(예를 들어 덮어쓰기?)만 가능한 듯,
  버킷 내부를 모두 지우고 새로 upload를 하면, 위와 같이 권한을 주어도
  퍼블릭 액세스 차단 활성화 상태에서는 접근이 안됨

  처음으로 통으로 올릴때는 객체 소유권도 ACL 활성화로(버킷 소유자 선호) 해주어야 업로드 가능


$ eb init
    - seoul 선택 (10번)
    - Create New Application (2번) 선택
    - Enter Application Name : taltalrealty3.1
    - It appears you are using Python. Is this correct? Y
    - Select a platform branch. 1) Python 3.8
    - Do you wish to continue with CodeCommit? n
    - Do you want to set up SSH for your instances? Y
        - Select a keypair. 2) Create new KeyPair
            - Type a keypair name: aws-eb-taltalrealty2
                Enter passphrase(empty for no passphrase): 비어있는 상태로 엔터
                Enter same passphrase again: 그대로 엔터

$ pipenv install pipenv-to-requirements
    $ pipenv lock -r > requirements.txt

$ git add . / git commit -m "." / eb create
    - Enter Environment Name: taltalrealty31-dev
    - Enter DNS CNAME prefix: taltalrealty31-dev
    - Select a load balancer type
        1) classic
        2) application
        3) network
        (default is2): 엔터
    - Would you like to enable spot Fleet requests for this environment? N

여기까지 진행하고 웹 실행해보면
    502 Bad Gateway
    nginx/1.20.0

eb logs --all 을 통해 log를 보
별다른 오류가 발생하지 않았음.

Elastic Beanstalk 구성 설정(configurations)해서 .env 변수들 추가하고, RDS 연결.

* pgadmin 연결 안해도 동작 했음 / 설정을 잘하면 pgadmin 없이 이용 가능한 듯
* ec2의 보안그룹도 설정하지 않은 상태인데 되었음. -> 모두 열려있어서? 보안 그룹 설정 필요


----------------------------------------------------------------------------------------------------------------
추후 과제

* AWS의 linux 원격으로 보고 내부 파일을 모두 볼 수 있는 방법을 익혀서 그 구조를 확인하자(EC2 원격접근)
* EC2 보안그룹 설정 - 포트 최소한만 열고, 보안에 안전하도록 익히기
----------------------------------------------------------------------------------------------------------------


중요 참고 자료
https://docs.aws.amazon.com/ko_kr/elasticbeanstalk/latest/dg/create-deploy-python-container.html

https://blog.hbsmith.io/elastic-beanstalk-amazon-linux2-python-%ED%99%98%EA%B2%BD-%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98-%ED%9B%84%EA%B8%B0-96fe21370d84
pythonpath가 제대로 설정되어 있지 않아서 eb create는 되는데 eb deploy가 계속 에러?


아래는 요약 없이 오류 발생한 것 까지 작성한 것들 (오류 막힐 때 참고)
----------------------------------------------------------------------------------------------------------------
2022년 4월 17일 ~ 2022년 4월 18일

django.config 여러가지

.ebextensions/02-django.config
  container_commands:
    01_migrate:
      command: "django-admin migrate"
      leader_only: true
    02_createsu:
      command: "django-admin createsu"
  option_settings:
    aws:elasticbeanstalk:container:python:
      WSGIPath: config/wsgi.py
    aws:elasticbeanstalk:application:environment:
      DJANGO_SETTINGS_MODULE: config.settings

  -> 위와 같이 django-admin 이용하는 것은 지금은 안된다.
    지금은 Elastic Beanstalk 생성시 configuration setting에 PYTHONPATH가 자동 생성, migrate를 해 줄때 PYTHONPATH를 고려해서 입력해줘야함

아래와 같이 하는 것을 stackoverflow에서 찾았고, 실제로도 됨
----------------------------------------
container_commands:
  01_migrate:
    command: "source /var/app/venv/*/bin/activate ; python manage.py migrate"
    leader_only: true
  02_collectstatic:
    command: "source /var/app/venv/*/bin/activate ; cd /var/app/staging ; python manage.py collectstatic --noinput"
  03_createsu:
    command: "source /var/app/venv/*/bin/activate ; cd /var/app/staging ; python manage.py createsu"
option_settings:
  aws:elasticbeanstalk:container:python:
    WSGIPath: config.wsgi:application
  aws:elasticbeanstalk:application:environment:
    DJANGO_SETTINGS_MODULE: config.settings
-------------------------------------------

나는 Elastic Beanstalk 의 configuration settings에 자동설정되어 있는
PYTHONPATH 그대로 붙여줌
source /var/app/venv/staging-LQM1lest/bin 까지 되어있는데, 이걸로는 동작 안됨, /activate 까지
----------------------------------------
container_commands:
  01_migrate:
    command: "source /var/app/venv/staging-LQM1lest/bin/activate ; python manage.py migrate"
    leader_only: true
  02_collectstatic:
    command: "source /var/app/venv/staging-LQM1lest/bin/activate ; python manage.py collectstatic --noinput"
  03_createsu:
    command: "source /var/app/venv/staging-LQM1lest/bin/activate ; python manage.py createsu"
option_settings:
  aws:elasticbeanstalk:container:python:
    WSGIPath: config.wsgi:application
  aws:elasticbeanstalk:application:environment:
    DJANGO_SETTINGS_MODULE: config.settings
-------------------------------------------


AWS RDS 생성
    - PostgreSQL , 버전: PostgreSQL 13.4-R1 (default), 프리티어
    - DB 인스턴스 식별자: taltalrealty3
    - 마스터 사용자 이름: postgres (default)
    - 마스터 암호: @ 사용 안됨
    - 추가 구성 / 데이터베이스 옵션 / 초기 데이터베이스 이름 설정 
      ->  "데이터베이스 이름을 지정하지 않으면 Amazon RDS에서 데이터베이스를 생성하지 않습니다." 라고 설명
          실제로 이걸 안해줘서 오류 발생
    - DB 인스턴스 클래스: 버스터블 클래스(t클래스 포함) - db.t3.micro 선택 (default)
    - 나머지 설정 default로 놔두고 생성

    요금 설명
      Amazon RDS 프리 티어는 12개월 동안 사용할 수 있습니다. 매월 프리 티어를 통해 아래 나열된 Amazon RDS 리소스를 무료로 사용할 수 있습니다.
      단일 AZ db.t2.micro 인스턴스에서 Amazon RDS의 750시간.
      20GB의 범용 스토리지(SSD).
      20GB의 자동 백업 스토리지 및 사용자가 시작한 모든 DB 스냅샷.
      AWS 무료 티어에 대해 자세히 알아보세요.
      무료 사용이 만료되었거나 애플리케이션에서 프리 티어 사용량을 초과한 경우 Amazon RDS 요금 페이지에서 설명한 대로, 표준 종량 서비스 요금이 적용됩니다.
      Amazon RDS 요금 설명: https://aws.amazon.com/ko/rds/pricing/


$ eb init
    - seoul 선택 (10번)
    - Create New Application (2번) 선택
    - Enter Application Name : taltalrealty3.1
    - It appears you are using Python. Is this correct? Y
    - Select a platform branch. 1) Python 3.8
    - Do you wish to continue with CodeCommit? n
    - Do you want to set up SSH for your instances? Y
        - Select a keypair. 2) Create new KeyPair
            - Type a keypair name: aws-eb-taltalrealty2
                Enter passphrase(empty for no passphrase): 비어있는 상태로 엔터
                Enter same passphrase again: 그대로 엔터

$ pipenv install pipenv-to-requirements
    $ pipenv lock -r > requirements.txt

$ git add . / git commit -m "." / eb create
    - Enter Environment Name: taltalrealty31-dev
    - Enter DNS CNAME prefix: taltalrealty31-dev
    - Select a load balancer type
        1) classic
        2) application
        3) network
        (default is2): 엔터
    - Would you like to enable spot Fleet requests for this environment? N

여기까지 진행하고 웹 실행해보면
    502 Bad Gateway
    nginx/1.20.0

eb logs --all 을 통해 log를 보
별다른 오류가 발생하지 않았음.

Elastic Beanstalk 구성 설정(configurations)해서 .env 변수들 추가하고, RDS 연결.

아직 안되었음

Elastic Beanstalk 구성을 보면
DJANGO_SETTINGS_MODULE이 없음. wsgi 설정을 잘못해서 그런듯...?

cfn-init.log: cfnbootstrap.construction_errors.ToolError: Command 01_migrate failed
cfn-init-cmd.log: ModuleNotFoundError: No module named 'config'

.ebextensions/02-django.config
  container_commands:
    01_migrate:
      command: "django-admin migrate"
      leader_only: true
    02_createsu:
      command: "django-admin createsu"
  option_settings:
    aws:elasticbeanstalk:container:python:
      WSGIPath: config.wsgi:application     # 이 부분만 수정해보고 진행
    aws:elasticbeanstalk:application:environment:
      DJANGO_SETTINGS_MODULE: config.settings

위와 같이 해주고 다시 eb deploy 

cfn-init.log: cfnbootstrap.construction_errors.ToolError: Command 01_migrate failed
cfn-init-cmd.log: ModuleNotFoundError: No module named 'config'

여전히 마찬가지임.
Elastic Beanstalk 구성 설정에
DJANGO_SETTINGS_MODULE이 빠져있고, WSGIPath도 업데이트가 안되고 application으로 되어있어서 그런것 같음...

보통은 생성할때 위 2개가 설정이 되어있었는데,
django-config 파일을 오타(띄어쓰기)를 내서 설정이 잘못된거 같기도 함

DJANGO_SETTINGS_MODULE은 수동으로 추가해줌
DJANGO_SETTINGS_MODULE : config.settings

컨테이너 옵션에서
WSGIPath 수동 추가 config.wsgi:application


이렇게 해주니까 되었음

django.config 에서 띄어쓰기 오타때문에 업로드가 안된건지 모르니, eb terminate 해주고 다시 해보자.

.elasticbeanstalk도 삭제해주고 다시 eb init부터

다시 해주니까
WSGIPath, DJANGO_SETTINGS_MODULE 설정되어있음

이제 다시등록

잘 됨

근데 수정할거 있어서 수정해주고 eb deploy 해주니 또 안됨
또 같은 에러 발생
cfn-init.log: cfnbootstrap.construction_errors.ToolError: Command 01_migrate failed
cfn-init-cmd.log: ModuleNotFoundError: No module named 'config'

https://blog.hbsmith.io/elastic-beanstalk-amazon-linux2-python-%ED%99%98%EA%B2%BD-%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98-%ED%9B%84%EA%B8%B0-96fe21370d84
pythonpath가 제대로 설정되어 있지 않아서 eb create는 되는데 eb deploy가 계속 에러?

아무래도 이게 맞는 듯,
노마드 강의를 보면
PYTHONPATH가 설정되어 있지 않은데,

지금 Elastic Beanstalk를 생성하면, PYTHONPATH가 default로
/var/app/venv/staging-LQM1lest/bin 으로 설정되어있음

이를 지워주고 해보자
-> 지워도 다시 생성됨

.ebextensions
    container_commands:
      01_migrate:
        command: "source /var/app/venv/staging-LQM1lest/bin/activate ; python manage.py migrate"
        leader_only: true
      02_collectstatic:
        command: "source /var/app/venv/staging-LQM1lest/bin/activate ; python manage.py collectstatic --noinput"
      03_createsu:
        command: "source /var/app/venv/staging-LQM1lest/bin/activate ; python manage.py createsu"
    option_settings:
      aws:elasticbeanstalk:container:python:
        WSGIPath: config.wsgi:application
      aws:elasticbeanstalk:application:environment:
        DJANGO_SETTINGS_MODULE: config.settings

-> Elastic Beanstalk의 configurations settting 에 자동설정되어 있는 
   PYTHONPATH 이용:/var/app/venv/staging-LQM1lest/bin
   그런데 저기까지만 하면 안되고, /activate 추가해주어야 됨
   command: "source /var/app/venv/staging-LQM1lest/bin/activate ; python manage.py migrate"

    -> AWS의 linux 원격으로 보고 내부 파일을 모두 볼 수 있는 방법을 익혀서 그 구조를 확인해보는 것을 다음 과제로 하자

S3 ACL 설정(S3 버킷 삭제도 가능)
 - 권한 부여를 하고 진행해야 가능

 https://docs.aws.amazon.com/ko_kr/config/latest/developerguide/s3-bucket-policy.html
  1. S3 버킷이 포함된 계정을 사용하여 AWS Management Console에 로그인합니다.

  2. https://console.aws.amazon.com/s3/에서 Amazon S3 콘솔을 엽니다.

  3. AWS Config에서 구성 항목을 전송할 때 사용할 버킷을 선택한 다음 속성을 선택합니다.

  4. 권한을 선택합니다.

  5. [Edit Bucket Policy]를 선택합니다.

  6.다음 정책을 버킷 정책 편집기 창으로 복사합니다.
    {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Sid": "AWSConfigBucketPermissionsCheck",
          "Effect": "Allow",
          "Principal": {
            "Service": "config.amazonaws.com"
          },
          "Action": "s3:GetBucketAcl",
          "Resource": "arn:aws:s3:::targetBucketName",
          "Condition": { 
            "StringEquals": {
              "AWS:SourceAccount": "sourceAccountID"
            }
          }
        },
        {
          "Sid": "AWSConfigBucketExistenceCheck",
          "Effect": "Allow",
          "Principal": {
            "Service": "config.amazonaws.com"
          },
          "Action": "s3:ListBucket",
          "Resource": "arn:aws:s3:::targetBucketName",
          "Condition": { 
            "StringEquals": {
              "AWS:SourceAccount": "sourceAccountID"
            }
          }
        },
        {
          "Sid": "AWSConfigBucketDelivery",
          "Effect": "Allow",
          "Principal": {
            "Service": "config.amazonaws.com"
          },
          "Action": "s3:PutObject",
          "Resource": "arn:aws:s3:::targetBucketName/[optional] prefix/AWSLogs/sourceAccountID/Config/*",
          "Condition": { 
            "StringEquals": { 
              "s3:x-amz-acl": "bucket-owner-full-control",
              "AWS:SourceAccount": "sourceAccountID"
            }
          }
        }
      ]
    }

    sourceAccountID는 계정 ID: 1542-4215-1844 숫자 형태로 되어있는것
                                영문으로 되어있는 걸로 하면 퍼블릭 액세스 차단 상태에서 접근이 안됨

    
위와 같이 권한에서 정책 편집을 해서 권한을 부여하고 나면,
퍼블릭 액세스 차단을 활성화 한 상태에서도 업로드가 가능
근데, 추가 업로드(예를 들어 덮어쓰기?)만 가능한 듯,
버킷 내부를 모두 지우고 새로 upload를 하면, 위와 같이 권한을 주어도
퍼블릭 액세스 차단 활성화 상태에서는 접근이 안됨

처음으로 통으로 올릴때는 객체 소유권도 ACL 활성화로(버킷 소유자 선호) 해주어야 업로드 가능

--------------------------------------------------------
과거 aws 자료

  순서 요약: 
    pip3 install awsebcli
    eb init
    eb create
    pipenv install pipenv-to-requirements 해주고 pipenv lock -r > requirements.txt
    RDS 생성
    ElasticBeanstalk Configuration
      DATABASE = {
            "defult": {
                "ENGINE": "django.db.backends.postgresql",
                "HOST": os.environ.get("RDS_HOST"),                    # RDS/데이터베이스/Connectivity & security에 (연결&보안)있는 Endpoint 입력
                "NAME": os.environ.get("RDS_NAME"),                    # 방금 만들었던 db 이름(DB 식별자) : "airbnb-clone" -> "postgres"로 해줘야 Error – FATAL: database name does not exist  해결됨!!!!!!!  -> 아닌 듯, 내가 만든 이름 넣으면 됨. ex) taltalrealty31
                "USER": os.environ.get("RDS_USER"),                    # username에 있었던 것: "postgres"
                "PASSWORD": os.environ.get("RDS_PASSWORD"),            # RDS에 등록한 비번
                "PORT": "5432",                 # Connectivity & security에 있는 Port
                
            }
        }
    pgadmin에 RDS 등록  
    보안그룹설정
    S3 버킷 생성
    

  (.ebextensions/django.config)
  option_settings:
    aws:elasticbeanstalk:container:python:
      WSGIPath: config.wsgi:application               # 강의에서는 config/wsgi.py 였으나 오류 발생 https://stackoverflow.com/questions/62049763/aws-elastic-beanstalk-wsgi-path-incorrect

  eb init
      Application Name: "air_bnb_clone_integrity"

  eb create airbnb-clone 해주었음 : ERROR: ServiceError - Create environment operation is complete, but with errors. For more information, see troubleshooting documentation.
  eb create 만 입력해도 default값 설정해줌

  (여기서 확인?? https://ap-northeast-2.console.aws.amazon.com/elasticbeanstalk/home?region=ap-northeast-2#/application/overview?applicationName=air_bnb_clone_integrity : 좀 이상...)

  EC2로 가서 실행중인 인스턴스 확인

  Elastic Beanstalk 가서 사이트 열어보니 502 Bad Gateway라고 뜸

  eb logs 확인해서 보니 pywin32, pypiwin32 뭐라고 하면서 에러가 발생해서, pipfile.lock이랑 requirements.txt에서 pywin32, pypiwin32 모두 삭제
      - win 붙은건 window 환경에서 사용되는 것이고, aws 는 리눅스환경이라 삭제해주면 되는거라고 함..

  PostgreSQL : 12.5.15-R1 선택했음 -> 9.6.15-R1 선택해서 재설치


  (requirements.txt)
  psycopg2==2.8.6

  eb deploy를 하니... 
  2021/02/19 09:23:45.312888 [ERROR] An error occurred during execution of command [app-deploy] - [InstallDependency]. Stop running the command. Error: fail to install dependencies with requirements.txt file with error Command /bin/sh -c /var/app/venv/staging-LQM1lest/bin/pip install -r requirements.txt failed with error exit status 1. Stderr:ERROR: Could not find a version that satisfies the requirement psycopg==2.8.6
  ERROR: No matching distribution found for psycopg==2.8.6

  (.ebextensions/packages.config 생성)
  packages:
    yum:                        # 일종의 pip
      postgresql-devel:[]       # 안되면 postgresql-devel96:[] 으로 


  # 26.4부터 다시 실행하면 될 듯..


  psycopg2.OperationalError: could not connect to server: Connection timed out
  Is the server running on host "taltal-realty.cbmvgosaoiih.ap-northeast-2.rds.amazonaws.com" (172.31.45.17) and accepting
  TCP/IP connections on port 5432?
  
  The above exception was the direct cause of the following exception:
  
  django.db.utils.OperationalError: could not connect to server: Connection timed out
  Is the server running on host "taltal-realty.cbmvgosaoiih.ap-northeast-2.rds.amazonaws.com" (172.31.45.17) and accepting
  TCP/IP connections on port 5432?
  
  (ElasticBeanstalk::ExternalInvocationError)

  아래와 같은 오류가 발생

  현재 진행중인 방법 : https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ConnectToPostgreSQLInstance.html

  1) pgadmin 이용

  2) pgadmin 연결 오류가 떴음 Error – Could not connect to server: Connection timed out
    Make sure that the DB instance's public accessibility is set to Yes to allow external connections. To modify the Public access setting, see Modifying an Amazon RDS DB instance.
    라길래, 체크했더니 No로 되어 있어서 Yes로 수정해주었음 - 여전히 안됨


  * 서비스 종료: eb terminate / eb terminate --all