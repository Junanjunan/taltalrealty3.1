조금더 이론적인 이해, 공부가 필요한 부분

.ebextensions
    02-django.config
        container_commands:
            01_migrate:
                command: "source /var/app/venv/staging-LQM1lest/bin/activate ; python manage.py migrate"
        option_settings:
            aws:elasticbeanstalk:container:python:
                WSGIPath: config.wsgi:application
            aws:elasticbeanstalk:application:environment:
                DJANGO_SETTINGS_MODULE: config.settings
        -> /var/ap/venv/ 등으로 표현한 부분, AWS EC2 에 접근하는 루트인것 같은데 좀 더 정확한 이해 필요
        -> WSGI, WSGIPath 에 대한 것 더 이해 필요

books/forms.py
    class CommonInput(forms.ModelForm):
        ...
        def clean(self):
            owner_phone = self.cleaned_data.get("owner_phone")
            ...
                self.add_error("owner_phone", forms.ValidationError("~"))

        -> clean 함수: 의미, 주용도, 그외 용도

config/authentication.py
    request.Meta.get("HTTP_AUTHORIZATION")
        -> request.Meta 가 무엇인지


config/custom_storages.py
    S3Boto3Storage에 대해서 좀더


config/settings.py
    BASE_DIR = Path(__file__).resolove().parent.parent
        -> 아예 전부 공부 필요

    MIDDLEWARE
        -> MIDDLEWARE 안에 있는 모든 것들

    TEMPLATES
        -> 'BACKEND', 'APP_DIRS', 'OPTIONS' 에 대한 이해

    WSGI_APPLICATION
        -> 이것 자체에 대한 이해

    AUTH_PASSWORD-VALIDATORS
    
    USE_I18N / USE_L10N / USE_TZ

    STATIC_URL / STATICFILES_DIRS / STATIC_ROOT (특히 각각이 언제 어떤 용도로 필요한지)

    MEDIA_ROOT / MEDIA_URL

    DEFAULT_AUTO_FIELD

    REST_FRAMEWORK : 여러가지 설정들 익히기

homes/models.py
    home_id = modles.BigAutoField(primary_key=True)

managements/views.py
    send_mail()

static
    이 내부에 있는 파일들 이용해서 admin 등도 css 건들수 있는 것 같은데, 공부하면 좋을 듯

users/management/commands/createsu.py
    AWS에 업로드 할때 수퍼유저 자동 생성하도록 커맨드 만든 건데, 어떻게 쓸수 있는지 등등 익히기

users/modles.py
    def verify_email(self):
        uuid
    def get_absolute_url

users/views.py
    def form_valid(self, form):
        -> form_valid 언제, 어떤 용도로 쓰는지 좀 정확히 의미 파악 필요
    def get_object(self, queryset=None):
        -> 이것 역시
    def get_success_url(self):

var/static
    -> collectstatic 을 통해 생긴것일것 (settings.py에서 STATIC_ROOT 등과도 연관)
    -> collectstatic 에 대한 좀 더 명확한 이해 필요

manage.py